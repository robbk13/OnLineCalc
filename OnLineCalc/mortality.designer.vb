'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="lsp_calc")>  _
Partial Public Class mortalityDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertMortabilitySearchable(instance As MortabilitySearchable)
    End Sub
  Partial Private Sub UpdateMortabilitySearchable(instance As MortabilitySearchable)
    End Sub
  Partial Private Sub DeleteMortabilitySearchable(instance As MortabilitySearchable)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("lsp_calcConnectionString1").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property MortabilitySearchables() As System.Data.Linq.Table(Of MortabilitySearchable)
		Get
			Return Me.GetTable(Of MortabilitySearchable)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MortabilitySearchable")>  _
Partial Public Class MortabilitySearchable
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Integer
	
	Private _SourceName As String
	
	Private _Age As System.Nullable(Of Integer)
	
	Private _Gender As String
	
	Private _GenderNumber As System.Nullable(Of Integer)
	
	Private _Year As System.Nullable(Of Integer)
	
	Private _Probability As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnSourceNameChanging(value As String)
    End Sub
    Partial Private Sub OnSourceNameChanged()
    End Sub
    Partial Private Sub OnAgeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAgeChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnGenderNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGenderNumberChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnProbabilityChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnProbabilityChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SourceName", DbType:="VarChar(500)")>  _
	Public Property SourceName() As String
		Get
			Return Me._SourceName
		End Get
		Set
			If (String.Equals(Me._SourceName, value) = false) Then
				Me.OnSourceNameChanging(value)
				Me.SendPropertyChanging
				Me._SourceName = value
				Me.SendPropertyChanged("SourceName")
				Me.OnSourceNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Age", DbType:="Int")>  _
	Public Property Age() As System.Nullable(Of Integer)
		Get
			Return Me._Age
		End Get
		Set
			If (Me._Age.Equals(value) = false) Then
				Me.OnAgeChanging(value)
				Me.SendPropertyChanging
				Me._Age = value
				Me.SendPropertyChanged("Age")
				Me.OnAgeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="VarChar(50)")>  _
	Public Property Gender() As String
		Get
			Return Me._Gender
		End Get
		Set
			If (String.Equals(Me._Gender, value) = false) Then
				Me.OnGenderChanging(value)
				Me.SendPropertyChanging
				Me._Gender = value
				Me.SendPropertyChanged("Gender")
				Me.OnGenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GenderNumber", DbType:="Int")>  _
	Public Property GenderNumber() As System.Nullable(Of Integer)
		Get
			Return Me._GenderNumber
		End Get
		Set
			If (Me._GenderNumber.Equals(value) = false) Then
				Me.OnGenderNumberChanging(value)
				Me.SendPropertyChanging
				Me._GenderNumber = value
				Me.SendPropertyChanged("GenderNumber")
				Me.OnGenderNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="Int")>  _
	Public Property Year() As System.Nullable(Of Integer)
		Get
			Return Me._Year
		End Get
		Set
			If (Me._Year.Equals(value) = false) Then
				Me.OnYearChanging(value)
				Me.SendPropertyChanging
				Me._Year = value
				Me.SendPropertyChanged("Year")
				Me.OnYearChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Probability", DbType:="Float")>  _
	Public Property Probability() As System.Nullable(Of Double)
		Get
			Return Me._Probability
		End Get
		Set
			If (Me._Probability.Equals(value) = false) Then
				Me.OnProbabilityChanging(value)
				Me.SendPropertyChanging
				Me._Probability = value
				Me.SendPropertyChanged("Probability")
				Me.OnProbabilityChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
